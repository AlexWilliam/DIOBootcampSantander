{"id":"index.ts","dependencies":[{"name":"D:\\Workspace\\DIOSantander\\tsconfig.json","includedInParent":true,"mtime":1657059322762},{"name":"D:\\Workspace\\DIOSantander\\package.json","includedInParent":true,"mtime":1657059054737}],"generated":{"js":"\"use strict\";\n\nvar BRASILIEIRO = {\n  nome: 'Alex',\n  idade: 31\n};\n/*import $ from 'jquery';\r\n\r\n$.fn.extend({\r\n    novaFuncao() {\r\n        console.log(\"Chamou nova função\");\r\n    }\r\n});\r\n\r\n$('body').novaFuncao();*/\n\n/*interface ICachorro {\r\n    nome: string;\r\n    idade: number;\r\n    parqueFavorito?: string;\r\n}\r\n\r\ntype TCachorroSomenteLeitura = {\r\n    +readonly [K in keyof ICachorro]-?: ICachorro[K]\r\n}\r\n\r\nclass MeuCachorro implements TCachorroSomenteLeitura {\r\n\r\n    nome;\r\n    idade;\r\n    parqueFavorito;\r\n\r\n    constructor(nome, idade){\r\n        this.nome = nome;\r\n        this.idade = idade;\r\n    }\r\n}\r\n\r\nconst MEU_CACHORRO = new MeuCachorro('Luna', 8);*/\n\n/*const MEU_CACHORRO: ICachorro = {\r\n    nome: 'Luna',\r\n    idade: 8\r\n}*/\n\n/*interface IUsuario {\r\n    id: string;\r\n    email: string;\r\n    cargo?: 'gerente' | 'coordenador' | 'supervisor' | 'funcionario';\r\n}\r\n\r\n\r\nfunction redireciona(usuario: IUsuario) {\r\n    if(usuario.cargo){\r\n        // redireciona para area de funcionario interno\r\n    }\r\n    \r\n    // redireciona para area de funcionario externo\r\n}*/\n\n/*\r\n// Generic Types\r\n\r\nfunction adicionaApendiceALista<T>(array: T[], value: T) {\r\n    return array.map(() => value);\r\n}\r\n\r\nadicionaApendiceALista(['1', '2', '3'], '1');*/\n\n/*const INPUT = document.getElementById('txtNome') as HTMLInputElement;\r\n\r\nINPUT.addEventListener('input', (event)=> {\r\n    const I = event.currentTarget as HTMLInputElement;\r\n    console.log(I.value);\r\n    //console.log(event.currentTarget.)\r\n});*/\n\n/*function soma(a:number, b:number) {\r\n    return a + b;\r\n}\r\n\r\n// types\r\n\r\ntype TAnimal = {\r\n    nome: string;\r\n    tipo: 'terrestre' | 'aquatico';\r\n    executarRugido(alturaEmDecibeis: number): void;\r\n}\r\n\r\n// interfaces\r\n\r\ninterface IAnimal {\r\n    nome: string;\r\n    tipo: 'terrestre' | 'aquatico';\r\n    executarRugido(alturaEmDecibeis: number): void;\r\n    domestico: boolean;\r\n}\r\n\r\ninterface IFelinos extends IAnimal {\r\n    visaoNoturna: boolean;\r\n}\r\n\r\ninterface ICaninos extends IAnimal {\r\n    porte: 'pequeno' | 'medio' | 'grande'\r\n}\r\n\r\ntype TDomestico = IFelinos | ICaninos;\r\n\r\nconst ANIMAL: IAnimal = {\r\n    nome: 'Elefante',\r\n    tipo: 'terrestre',\r\n    executarRugido: (alturaEmDecibeis) => (`${alturaEmDecibeis}`),\r\n    domestico: false\r\n}\r\n\r\nconst LEAO: IFelinos = {\r\n    nome: 'Leão',\r\n    tipo: 'terrestre',\r\n    visaoNoturna: true,\r\n    executarRugido: (alturaEmDecibeis) => (`${alturaEmDecibeis}`),\r\n    domestico: false\r\n}\r\n\r\nconst CACHORRO: TDomestico = {\r\n    domestico: true,\r\n    nome: 'cachorro',\r\n    porte: 'medio',\r\n    tipo: 'terrestre',\r\n    executarRugido: (alturaEmDecibeis) => (`${alturaEmDecibeis}`),\r\n}*/"},"sourceMaps":{"js":{"mappings":[{"source":"index.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":3,"column":0}},{"source":"index.ts","name":null,"original":{"line":11,"column":6},"generated":{"line":3,"column":4}},{"source":"index.ts","name":null,"original":{"line":11,"column":17},"generated":{"line":3,"column":15}},{"source":"index.ts","name":null,"original":{"line":11,"column":33},"generated":{"line":3,"column":18}},{"source":"index.ts","name":null,"original":{"line":12,"column":4},"generated":{"line":4,"column":2}},{"source":"index.ts","name":null,"original":{"line":12,"column":8},"generated":{"line":4,"column":6}},{"source":"index.ts","name":null,"original":{"line":12,"column":10},"generated":{"line":4,"column":8}},{"source":"index.ts","name":null,"original":{"line":11,"column":33},"generated":{"line":4,"column":14}},{"source":"index.ts","name":null,"original":{"line":13,"column":4},"generated":{"line":5,"column":2}},{"source":"index.ts","name":null,"original":{"line":13,"column":9},"generated":{"line":5,"column":7}},{"source":"index.ts","name":null,"original":{"line":13,"column":11},"generated":{"line":5,"column":9}},{"source":"index.ts","name":null,"original":{"line":11,"column":33},"generated":{"line":6,"column":0}},{"source":"index.ts","name":null,"original":{"line":11,"column":0},"generated":{"line":6,"column":1}},{"source":"index.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":7,"column":0}},{"source":"index.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":17,"column":0}},{"source":"index.ts","name":null,"original":{"line":50,"column":0},"generated":{"line":41,"column":0}},{"source":"index.ts","name":null,"original":{"line":57,"column":0},"generated":{"line":46,"column":0}},{"source":"index.ts","name":null,"original":{"line":72,"column":0},"generated":{"line":61,"column":0}},{"source":"index.ts","name":null,"original":{"line":83,"column":0},"generated":{"line":70,"column":0}},{"source":"index.ts","name":null,"original":{"line":93,"column":0},"generated":{"line":78,"column":0}}],"sources":{"index.ts":"interface IPessoa {\r\n    nome: string;\r\n    idade: number;\r\n    nacionalidade: string;\r\n}\r\n\r\ninterface IBrasileiro extends Omit<IPessoa, 'nacionalidade'> {\r\n\r\n}\r\n\r\nconst BRASILIEIRO: IBrasileiro = {\r\n    nome: 'Alex',\r\n    idade: 31\r\n}\r\n\r\n/*import $ from 'jquery';\r\n\r\n$.fn.extend({\r\n    novaFuncao() {\r\n        console.log(\"Chamou nova função\");\r\n    }\r\n});\r\n\r\n$('body').novaFuncao();*/\r\n\r\n/*interface ICachorro {\r\n    nome: string;\r\n    idade: number;\r\n    parqueFavorito?: string;\r\n}\r\n\r\ntype TCachorroSomenteLeitura = {\r\n    +readonly [K in keyof ICachorro]-?: ICachorro[K]\r\n}\r\n\r\nclass MeuCachorro implements TCachorroSomenteLeitura {\r\n\r\n    nome;\r\n    idade;\r\n    parqueFavorito;\r\n\r\n    constructor(nome, idade){\r\n        this.nome = nome;\r\n        this.idade = idade;\r\n    }\r\n}\r\n\r\nconst MEU_CACHORRO = new MeuCachorro('Luna', 8);*/\r\n\r\n/*const MEU_CACHORRO: ICachorro = {\r\n    nome: 'Luna',\r\n    idade: 8\r\n}*/\r\n\r\n\r\n\r\n/*interface IUsuario {\r\n    id: string;\r\n    email: string;\r\n    cargo?: 'gerente' | 'coordenador' | 'supervisor' | 'funcionario';\r\n}\r\n\r\n\r\nfunction redireciona(usuario: IUsuario) {\r\n    if(usuario.cargo){\r\n        // redireciona para area de funcionario interno\r\n    }\r\n    \r\n    // redireciona para area de funcionario externo\r\n}*/\r\n\r\n/*\r\n// Generic Types\r\n\r\nfunction adicionaApendiceALista<T>(array: T[], value: T) {\r\n    return array.map(() => value);\r\n}\r\n\r\nadicionaApendiceALista(['1', '2', '3'], '1');*/\r\n\r\n\r\n\r\n/*const INPUT = document.getElementById('txtNome') as HTMLInputElement;\r\n\r\nINPUT.addEventListener('input', (event)=> {\r\n    const I = event.currentTarget as HTMLInputElement;\r\n    console.log(I.value);\r\n    //console.log(event.currentTarget.)\r\n});*/\r\n\r\n\r\n\r\n/*function soma(a:number, b:number) {\r\n    return a + b;\r\n}\r\n\r\n// types\r\n\r\ntype TAnimal = {\r\n    nome: string;\r\n    tipo: 'terrestre' | 'aquatico';\r\n    executarRugido(alturaEmDecibeis: number): void;\r\n}\r\n\r\n// interfaces\r\n\r\ninterface IAnimal {\r\n    nome: string;\r\n    tipo: 'terrestre' | 'aquatico';\r\n    executarRugido(alturaEmDecibeis: number): void;\r\n    domestico: boolean;\r\n}\r\n\r\ninterface IFelinos extends IAnimal {\r\n    visaoNoturna: boolean;\r\n}\r\n\r\ninterface ICaninos extends IAnimal {\r\n    porte: 'pequeno' | 'medio' | 'grande'\r\n}\r\n\r\ntype TDomestico = IFelinos | ICaninos;\r\n\r\nconst ANIMAL: IAnimal = {\r\n    nome: 'Elefante',\r\n    tipo: 'terrestre',\r\n    executarRugido: (alturaEmDecibeis) => (`${alturaEmDecibeis}`),\r\n    domestico: false\r\n}\r\n\r\nconst LEAO: IFelinos = {\r\n    nome: 'Leão',\r\n    tipo: 'terrestre',\r\n    visaoNoturna: true,\r\n    executarRugido: (alturaEmDecibeis) => (`${alturaEmDecibeis}`),\r\n    domestico: false\r\n}\r\n\r\nconst CACHORRO: TDomestico = {\r\n    domestico: true,\r\n    nome: 'cachorro',\r\n    porte: 'medio',\r\n    tipo: 'terrestre',\r\n    executarRugido: (alturaEmDecibeis) => (`${alturaEmDecibeis}`),\r\n}*/"},"lineCount":null}},"error":null,"hash":"f0fd78a8f913afcdfc7a545710371f2f","cacheData":{"env":{}}}